<center>
<h1>Perl Dancer</h1>

<img src="/images/perldancer.png" style="border: 0">

<p>
The easiest way to write <br />
web applications with Perl
</p>
<center>

===

<h1>What is Dancer?</h1>

===

<h3>
web framework <br>
for Perl
</h3>

===

<h3>
<em>micro</em> <br>
web framework <br>
for Perl
</h3>

===
<h3>
<em>effective</em> <br>
web framework <br>
for Perl
</h3>

===

<h3>
<em>elegant</em> <br>
web framework <br>
for Perl
</h3>

===

<h3>
<em>CPAN-friendly</em> <br>
web framework <br>
for Perl
</h3>

===

<h3>
<em>fun</em> <br>
web framework <br>
for Perl
</h3>

===

<h3>
<em>PSGI</em> <br>
web framework <br>
for Perl
</h3>

===

<h2>YES</h2>

<p>
It's all that, <br />
and even more
</p>

===

<h1>Origins</h1>

===

<h2>The legacy</h2>

<center><img src="/images/castle.jpg"></center>

<p>
CGI.pm 
</p>

===

<img src="/images/optimus.jpg" style="float: left;">
<div style="padding-top: 1em;">
<h3>The big sister</h3>


<p style="padding-top: 2em;">Catalyst</p>
</div>

===

<h2>The inspiration</h2>

<center><img src="/images/sinatra.png"></center>

<p>
Sinatra (Ruby)
</p>

=== 

<h2>The structure</h2>

<center><img src="/images/psgi.jpg"></center>

<p>PSGI</p>

===

<h2>Dancer</h2>

<pre class="prettyprint">
#!/usr/bin/perl
use Dancer;

get '/' => sub {
    "Hello, world!";
};

dance;
</pre>

===

<h1>How to dance</h1>

===
<h2>Installation</h2>

<ul>
<li>Easy (few deps)
<li>Standalone server
<li>zero-conf (up to you)
<li>effortless

===

<h2>Development</h2>

<pre style="font-size: 32px;">
$ dancer -a SuperApp
...
$ cd SuperApp
$ ./bin/app.pl
>> Dancer server 23482 listening...
== Entering the development dance floor ...
</pre>

===

<h2>Deployment</h2>

<p>
Thanks to PSGI/Plack we<br />
can deploy vritually anywhere
</p>

===

<h2>Routes</h2>

<p>routes are Dancer's wires</p>

===

<h2>Route Handler</h2>

<ul>
<li>HTTP method
<li>path 
<li>subroutine
</ul>

===

<pre style="text-align: center; font-size: 62px;">
<span id="method" style="display: none;">get</span> <span id="path" style="display: none;">"/"</span> <span id="sub" style="display: none;">=&gt; sub { }; </span>
</pre>

<script>
    $('#method').fadeIn('slow', function() {
        $('#path').fadeIn('slow', function() {
            $('#sub').fadeIn('slow');
        });
    });
</script>
===

<h2>Static</h2>

<pre class="prettyprint">
get '/something' => sub { 
    "static route"; 
};
</pre>

===

<h2>Named tokens</h2>

<pre class="prettyprint">
get '/profile/:user' => sub { 
    "user: ".params->{'user'};
};
</pre>

===

<h2>Wildcards</h2>

<pre class="prettyprint">
get '/file/*.*' => sub { 
    my ($file, $ext) = splat;
    # ...
};
</pre>

===

<h2>Pure Perl regexps</h2>

<pre class="prettyprint">
get qr{/([a-z]{2}[\d+])/} => sub { 
    my ($match) = splat;
    # ...
};
</pre>

===

<h2>Configuration</h2>


<pre class="prettyprint">
# in my code
setting 'foo' => 42;

# or in my config.yml
foo: 42

# or in my environments/$ENV.yml
foo: 42
</pre>

===
<h2>filters</h2>

<pre class="prettyprint">
before sub { 
  if (request->path_info =~ /^\/home/) {
      if (not session('user_id')) {
          redirect '/login';
      }
  }
};
</pre>

===

<h2>Templates</h2>

<pre class="prettyprint">

get '/' => sub {
    template 'index', 
      { somevar => 101010 };
};

===

<h2>Serializers</h2>

<pre class="prettyprint">
set serializer => 'JSON';

get '/data' => sub {
    return {foo => 42};
};

$ curl http://0:3000/data
"{foo: 42}"

</pre>

===

<h2>Plugins</h2>

<pre class="prettyprint">

use Dancer::Plugin::Database;

get '/user/:id' => sub {
    my $id = params->{'id'},
    database->selectall_hashref(
        "SELECT * from users where id = $id"
	);
};
</pre>

===

<p>This is Dancer's essentials</p>

=== 

<p>There is a lot more </p>

===

<p style="font-size: 36px;">
Dancer::Route::<em>Cache</em> Dancer::Template::Simple Dancer::Template::TemplateToolkit 
Dancer::Session::YAML Dancer::Test Dancer::Session::Simple Dancer::Plugin::<em>DBIC</em>
Dancer::Plugin::<em>Database</em> Dancer::Template::Tenjin Dancer::Template::HtmlTemplate
Dancer::Template::Alloy Dancer::Template::Ctpp2 Dancer::Template::TemplateSandbox
</p>

===


<p style="font-size: 36px;">
Task::Dancer Dancer::Plugin::<em>Email</em> Dancer::Session::Storable Dancer::Plugin::<em>REST</em>
Dancer::Logger::<em>Syslog</em> Dancer::Template::Tiny Dancer::Plugin::SiteMap Dancer::Template::Haml
Dancer::Template::MicroTemplate Dancer::Template::Xslate Dancer::Session::<em>Memcache</em>
Dancer::Session::Cookie Dancer::Template::Mason Dancer::Plugin::<em>Ajax</em> Dancer::Plugin::Authorize
</p>

===

<p style="font-size: 42px;">
Dancer::Logger::<em>PSGI</em> Dancer::Serializer::XML Dancer::Serializer::Mutable Dancer::Serializer::<em>JSON</em>
Dancer::Cookie Dancer::<em>Serializer</em>::YAML Dancer::Logger::LogHandler Dancer::Session::<em>MongoDB</em>
Dancer::Session::PSGI Dancer::Plugin::Scoped Dancer::Debug 
</p>

=== 

<h2>It's a living ecosystem</h2>

===

<h1>How trustable</h1>

===

<h2>YoolinkPro</h2>

<ul>
<li>API Webserver
<li>Request Authentication (key signatures)
<li>REST with Dancer::Plugin::REST
</ul>

===

<h2>Linkfluence</h2>

<ul>
<li>Dancer-powered websites
<li><a href="http://jitterbug.perldancer.org">Jitterbug</a> (Franck Cuny)
</ul>

===

<h2>Novell: Baracus</h2>

<ul>
<li><a href="http://baracus-project.org">http://baracus-project.org</a>
<li>Enterprise boot and build management
<li>Dancer frontend web engine
<li>Complete REST API
</ul>

===

<h2>you and me</h2>

<p>more and more enthusiast individuals use Dancer</p>

===

<h2>Community</h2>

<ul>
<li>More 160 GitHub watchers
<li>40 GitHub forks
<li>Very active core team
<li>More than 90% code coverage
</ul>

===

<h2>Current release</h2>

<p>Dancer is already <br />
usable and pretty stable</p>

===

<h2>But soon...</h2>

<p>We're preparing a rocksolid release</p>

===

<h2>Dancer 1.2</h2>

<ul>
<li>New website
<li>Improved documentation
<li>Improved Plack support
<li>T-shirts!
</ul>

===

<h1>Demo?</h1>

===

<h3>You already had one</h3>

===

<h3>seriously</h3>

===

<p>
This whole presentation <br />
was powered by Dancer
</p>

===


<center><img src="/images/broadway.jpg"></center>

<p>Dancer-based Slideshow engine</p>

===

<h2>Broadway</h2>

<ul>
<li>a slideshow engine
<li>Ajax-based
<li>with remote controll
<li>less than 50 lines of Dancer
</ul>

===

<h1>Vim time</h1>

===

<h1><strike>Vim time</strike></h1>

===

<p>
<a href="http://github.com/sukria/Broadway">Broadway on GitHub</a>
</p>

===

<p>Thanks</p>

